{"version":3,"sources":["components/MainContent/Slider/Slider.module.css","components/Header/Header.module.css","components/MainContent/MainContent.module.css","components/MainContent/Sidebar/MenuItems.module.css","components/MainContent/Sidebar/Item.module.css","components/common/Dropdown.module.css","components/Header/Header.js","components/MainContent/Sidebar/Item.js","components/MainContent/Sidebar/MenuItems.js","components/MainContent/Slider/Slider.js","components/common/Dropdown.js","components/MainContent/MainContent.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","styles","headerWrapper","leftPanel","href","rightPanel","dottedBackground","textWrapper","Item","title","clickHandler","onClick","item","MenuItems","props","itemsWrapper","total","itemsList","items","map","key","id","currentId","selectedItem","Slider","images","handleNext","handlePrev","descs","description","addresses","address","titles","sliderContainer","src","alt","buttonsContainer","disabled","itemDescription","itemTitleWithCounter","itemTitle","itemAddress","itemsCounter","currentItem","totalItems","Dropdown","data","onChange","currentOption","value","select","e","parseInt","target","option","i","MainContent","imagesJSON","dataJSON","useState","index","setIndex","container","sidebar","style","position","fontSize","top","textTransform","fontWeight","letterSpacing","selectTitle","marginTop","itemId","content","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"sHACAA,EAAOC,QAAU,CAAC,gBAAkB,gCAAgC,iBAAmB,iCAAiC,gBAAkB,gCAAgC,qBAAuB,qCAAqC,aAAe,6BAA6B,YAAc,4BAA4B,WAAa,6B,gBCAzUD,EAAOC,QAAU,CAAC,cAAgB,8BAA8B,UAAY,0BAA0B,WAAa,2BAA2B,YAAc,4BAA4B,iBAAmB,mC,gBCA3MD,EAAOC,QAAU,CAAC,UAAY,+BAA+B,QAAU,6BAA6B,QAAU,6BAA6B,YAAc,mC,gBCAzJD,EAAOC,QAAU,CAAC,UAAY,6BAA6B,aAAe,gCAAgC,aAAe,kC,kBCAzHD,EAAOC,QAAU,CAAC,KAAO,qB,s/OCAzBD,EAAOC,QAAU,CAAC,OAAS,2B,wJC4BZC,EA1BA,WACb,OACE,yBAAKC,UAAWC,IAAOC,eACrB,yBAAKF,UAAWC,IAAOE,WACrB,2HACA,0fAKA,uBAAGC,KAAK,WACN,qHAGJ,yBAAKJ,UAAWC,IAAOI,YACrB,yBAAKL,UAAWC,IAAOK,mBACvB,yBAAKN,UAAWC,IAAOM,aACrB,gKAC2B,oEAD3B,yD,wCCTKC,EARF,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,MAAOC,EAAmB,EAAnBA,aACrB,OACE,wBAAIC,QAASD,EAAcV,UAAWC,IAAOW,MAC1CH,I,gBCuBQI,EAzBG,SAACC,GACjB,OACE,yBAAKd,UAAWC,IAAOc,cACrB,yEAAYD,EAAME,MAAlB,sDACA,wBAAIhB,UAAWC,IAAOgB,WACnBH,EAAMI,MAAMC,KAAI,SAACP,GAAD,OACf,yBACEQ,IAAKR,EAAKS,GACVrB,UACEc,EAAMQ,YAAcV,EAAKS,GAAK,EAAIpB,IAAOsB,aAAe,MAG1D,kBAAC,EAAD,CACEb,aAAc,WACZI,EAAMJ,aAAaE,EAAKS,GAAK,IAE/BZ,MAAOG,EAAKH,e,gBC4BXe,EA7CA,SAAC,GAOT,IANLF,EAMI,EANJA,UACAG,EAKI,EALJA,OACAP,EAII,EAJJA,MACAF,EAGI,EAHJA,MACAU,EAEI,EAFJA,WACAC,EACI,EADJA,WAEMC,EAAQV,EAAMC,KAAI,SAACP,GAAD,OAAUA,EAAKiB,eACjCC,EAAYZ,EAAMC,KAAI,SAACP,GAAD,OAAUA,EAAKmB,WACrCC,EAASd,EAAMC,KAAI,SAACP,GAAD,OAAUA,EAAKH,SAExC,OACE,6BACE,yBAAKT,UAAWC,IAAOgC,iBACrB,yBAAKC,IAAKT,EAAOH,GAAYa,IAAI,KACjC,yBAAKnC,UAAWC,IAAOmC,kBACrB,4BACEC,SAAwB,IAAdf,EACVX,QAASgB,IAEX,4BACEU,SAAUf,IAAcN,EAAQ,EAChCL,QAASe,MAKf,yBAAK1B,UAAWC,IAAOqC,iBACrB,yBAAKtC,UAAWC,IAAOsC,sBACrB,yBAAKvC,UAAWC,IAAOuC,WACrB,4BAAKR,EAAOV,IACZ,0BAAMtB,UAAWC,IAAOwC,aAAcX,EAAUR,KAElD,yBAAKtB,UAAWC,IAAOyC,cACrB,0BAAM1C,UAAWC,IAAO0C,aAAcrB,EAAY,GAClD,0BAAMtB,UAAWC,IAAO2C,YAAa5B,KAGzC,2BAAIY,EAAMN,O,+BCXHuB,EA3BE,SAAC,GAAkD,IAAhDC,EAA+C,EAA/CA,KAAMC,EAAyC,EAAzCA,SAAU/C,EAA+B,EAA/BA,UAAWgD,EAAoB,EAApBA,cAC7C,OACE,yBAAKhD,UAAWA,GACd,4BACEiD,MAAOD,EACPhD,UAAWC,IAAOiD,OAClBH,SAAU,SAACI,GACTJ,EAASK,SAASD,EAAEE,OAAOJ,UAG5BH,EAAK3B,KAAI,SAACmC,EAAQC,GAAT,OACR,4BAAQnC,IAAKmC,EAAGN,MAAOM,GACpBD,SC8EEE,EAtFK,WAElB,IAAM/B,EAASgC,EAAWhC,OACpBqB,EAAOY,EAHW,EAIEC,mBAAS,GAJX,mBAIjBC,EAJiB,KAIVC,EAJU,KAwBxB,OACE,yBAAK7D,UAAWC,IAAO6D,WACrB,yBAAK9D,UAAWC,IAAO8D,SAErB,yBAAKC,MAAO,CAAEC,SAAU,aACtB,uBACED,MAAO,CACLE,SAAU,OACVD,SAAU,WACVE,KAAM,GACNC,cAAe,YACfC,WAAY,IACZC,cAAe,UAPnB,iEAYA,kBAAC,EAAD,CACEtB,cAAe,EACfF,KAAM,CAAC,iBAAkB,gBAAiB,iBAC1CC,SAAU,eAEZ,uBACE/C,UAAWC,IAAOsE,YAClBP,MAAO,CACLQ,UAAW,GACXN,SAAU,OACVE,cAAe,YACfC,WAAY,IACZC,cAAe,UAPnB,qGAYA,kBAAC,EAAD,CACEtB,cAAeY,EACf5D,UAAU,eACV8C,KAAMA,EAAK5B,MAAMC,KAAI,SAACP,GAAD,OAAUA,EAAKH,SACpCsC,SA1Ce,SAAC0B,GACxBZ,GAAS,kBAAMY,SA4CX,kBAAC,EAAD,CACEnD,UAAWsC,EACXlD,aA7Da,SAACW,GACpBwC,GAAS,kBAAMxC,MA6DTL,MAAO8B,EAAK9B,MACZE,MAAO4B,EAAK5B,SAGhB,yBAAKlB,UAAWC,IAAOyE,QAASrD,GAAG,UACjC,kBAAC,EAAD,CACEC,UAAWsC,EACX5C,MAAO8B,EAAK9B,MACZE,MAAO4B,EAAK5B,MACZO,OAAQA,EACRC,WAnEW,WACjBmC,GAAS,SAACvC,GAAD,OAAeA,EAAY,MAmE9BK,WAhEW,WACjBkC,GAAS,SAACvC,GAAD,OAAeA,EAAY,WCXzBqD,EATH,WACV,OACE,6BACE,kBAAC,EAAD,MACA,kBAAC,EAAD,QCIcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.8fc98163.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"sliderContainer\":\"Slider_sliderContainer__1LaBA\",\"buttonsContainer\":\"Slider_buttonsContainer__2x5kI\",\"itemDescription\":\"Slider_itemDescription__kcko0\",\"itemTitleWithCounter\":\"Slider_itemTitleWithCounter__OOpCK\",\"itemsCounter\":\"Slider_itemsCounter__W19WW\",\"currentItem\":\"Slider_currentItem__183Kw\",\"totalItems\":\"Slider_totalItems__sXF71\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerWrapper\":\"Header_headerWrapper__1oKyh\",\"leftPanel\":\"Header_leftPanel__100DF\",\"rightPanel\":\"Header_rightPanel__2AcVB\",\"textWrapper\":\"Header_textWrapper__3s5sw\",\"dottedBackground\":\"Header_dottedBackground__1kPYu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"MainContent_container__3ap1E\",\"content\":\"MainContent_content__23l2W\",\"sidebar\":\"MainContent_sidebar__2JI7N\",\"selectTitle\":\"MainContent_selectTitle__1xCMB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"itemsList\":\"MenuItems_itemsList__15Lbm\",\"itemsWrapper\":\"MenuItems_itemsWrapper__33A1E\",\"selectedItem\":\"MenuItems_selectedItem__2opJV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Item_item__1HifY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"select\":\"Dropdown_select__2oWbw\"};","import React from 'react';\nimport styles from './Header.module.css';\n\nconst Header = () => {\n  return (\n    <div className={styles.headerWrapper}>\n      <div className={styles.leftPanel}>\n        <h1>Галерея проектов</h1>\n        <p>\n          Сумма экономии рассчитана в сравнении с суммой цен этого же перечня\n          товаров по отдельности\n        </p>\n\n        <a href='#slider'>\n          <button>Выбрать дизайн</button>\n        </a>\n      </div>\n      <div className={styles.rightPanel}>\n        <div className={styles.dottedBackground}></div>\n        <div className={styles.textWrapper}>\n          <p>\n            Мы успешно завершили уже <span>более 450</span> ремонтов\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n","import React from 'react';\nimport styles from './Item.module.css';\n\nconst Item = ({ title, clickHandler }) => {\n  return (\n    <li onClick={clickHandler} className={styles.item}>\n      {title}\n    </li>\n  );\n};\n\nexport default Item;\n","import React from 'react';\nimport Item from './Item';\nimport styles from './MenuItems.module.css';\n\nconst MenuItems = (props) => {\n  return (\n    <div className={styles.itemsWrapper}>\n      <p>Найдено {props.total} объектов:</p>\n      <ul className={styles.itemsList}>\n        {props.items.map((item) => (\n          <div\n            key={item.id}\n            className={\n              props.currentId === item.id - 1 ? styles.selectedItem : null\n            }\n          >\n            <Item\n              clickHandler={() => {\n                props.clickHandler(item.id - 1);\n              }}\n              title={item.title}\n            />\n          </div>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default MenuItems;\n","import React from 'react';\nimport styles from './Slider.module.css';\n\nconst Slider = ({\n  currentId,\n  images,\n  items,\n  total,\n  handleNext,\n  handlePrev,\n}) => {\n  const descs = items.map((item) => item.description);\n  const addresses = items.map((item) => item.address);\n  const titles = items.map((item) => item.title);\n\n  return (\n    <div>\n      <div className={styles.sliderContainer}>\n        <img src={images[currentId]} alt='' />\n        <div className={styles.buttonsContainer}>\n          <button\n            disabled={currentId === 0 ? true : false}\n            onClick={handlePrev}\n          ></button>\n          <button\n            disabled={currentId === total - 1 ? true : false}\n            onClick={handleNext}\n          ></button>\n        </div>\n      </div>\n\n      <div className={styles.itemDescription}>\n        <div className={styles.itemTitleWithCounter}>\n          <div className={styles.itemTitle}>\n            <h3>{titles[currentId]}</h3>\n            <span className={styles.itemAddress}>{addresses[currentId]}</span>\n          </div>\n          <div className={styles.itemsCounter}>\n            <span className={styles.currentItem}>{currentId + 1}</span>\n            <span className={styles.totalItems}>{total}</span>\n          </div>\n        </div>\n        <p>{descs[currentId]}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default Slider;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Dropdown.module.css';\n\nconst Dropdown = ({ data, onChange, className, currentOption }) => {\n  return (\n    <div className={className}>\n      <select\n        value={currentOption}\n        className={styles.select}\n        onChange={(e) => {\n          onChange(parseInt(e.target.value));\n        }}\n      >\n        {data.map((option, i) => (\n          <option key={i} value={i}>\n            {option}\n          </option>\n        ))}\n      </select>\n    </div>\n  );\n};\n\nDropdown.propTypes = {\n  data: PropTypes.array.isRequired,\n  onChange: PropTypes.func.isRequired,\n  className: PropTypes.string,\n  currentOption: PropTypes.number.isRequired,\n};\n\nexport default Dropdown;\n","import React, { useState } from 'react';\nimport styles from './MainContent.module.css';\nimport MenuItems from './Sidebar/MenuItems';\nimport Slider from './Slider/Slider';\nimport imagesJSON from '../../images.json';\nimport dataJSON from '../../data.json';\nimport Dropdown from '../common/Dropdown';\n\nconst MainContent = () => {\n  // Mock data\n  const images = imagesJSON.images;\n  const data = dataJSON;\n  const [index, setIndex] = useState(0);\n\n  const clickHandler = (id) => {\n    setIndex(() => id);\n  };\n\n  // Slider button click handlers\n  const handleNext = () => {\n    setIndex((currentId) => currentId + 1);\n  };\n\n  const handlePrev = () => {\n    setIndex((currentId) => currentId - 1);\n  };\n\n  // Dropdown selected option change hanlder\n  const onDropdownChange = (itemId) => {\n    setIndex(() => itemId);\n  };\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.sidebar}>\n        {/* Why not use inline styles sometimes :) */}\n        <div style={{ position: 'relative' }}>\n          <p\n            style={{\n              fontSize: '1rem',\n              position: 'absolute',\n              top: -28,\n              textTransform: 'uppercase',\n              fontWeight: 700,\n              letterSpacing: '1.8px',\n            }}\n          >\n            Тип ремонта\n          </p>\n          <Dropdown\n            currentOption={2}\n            data={['Smart Standard', 'Smart Optimal', 'Smart Comfort']}\n            onChange={() => {}}\n          />\n          <p\n            className={styles.selectTitle}\n            style={{\n              marginTop: 14,\n              fontSize: '1rem',\n              textTransform: 'uppercase',\n              fontWeight: 700,\n              letterSpacing: '1.8px',\n            }}\n          >\n            Сделанные ремонты\n          </p>\n          <Dropdown\n            currentOption={index}\n            className='mobileSelect'\n            data={data.items.map((item) => item.title)}\n            onChange={onDropdownChange}\n          />\n        </div>\n        <MenuItems\n          currentId={index}\n          clickHandler={clickHandler}\n          total={data.total}\n          items={data.items}\n        />\n      </div>\n      <div className={styles.content} id='slider'>\n        <Slider\n          currentId={index}\n          total={data.total}\n          items={data.items}\n          images={images}\n          handleNext={handleNext}\n          handlePrev={handlePrev}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default MainContent;\n","import React from 'react';\nimport Header from './components/Header/Header';\nimport MainContent from './components/MainContent/MainContent';\n\nconst App = () => {\n  return (\n    <div>\n      <Header />\n      <MainContent />\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}